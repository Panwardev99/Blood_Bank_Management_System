<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BloodBankDbDataSet2" targetNamespace="http://tempuri.org/BloodBankDbDataSet2.xsd" xmlns:mstns="http://tempuri.org/BloodBankDbDataSet2.xsd" xmlns="http://tempuri.org/BloodBankDbDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BloodBankDbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BloodBankDbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Bloodbankmanagement2.Properties.Settings.GlobalReference.Default.BloodBankDbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BloodTb1TableAdapter" GeneratorDataComponentClassName="BloodTb1TableAdapter" Name="BloodTb1" UserDataComponentName="BloodTb1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BloodBankDbConnectionString (Settings)" DbObjectName="dbo.BloodTb1" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BloodTb1] WHERE (([BGroup] = @Original_BGroup) AND ([BStock] = @Original_BStock))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BStock" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BloodTb1] ([BGroup], [BStock]) VALUES (@BGroup, @BStock);
SELECT BGroup, BStock FROM BloodTb1 WHERE (BGroup = @BGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BStock" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BGroup, BStock FROM dbo.BloodTb1</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BloodTb1] SET [BGroup] = @BGroup, [BStock] = @BStock WHERE (([BGroup] = @Original_BGroup) AND ([BStock] = @Original_BStock));
SELECT BGroup, BStock FROM BloodTb1 WHERE (BGroup = @BGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BStock" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BStock" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BGroup" DataSetColumn="BGroup" />
              <Mapping SourceColumn="BStock" DataSetColumn="BStock" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BloodBankDbDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BloodBankDbDataSet2" msprop:Generator_UserDSName="BloodBankDbDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BloodTb1" msprop:Generator_TableClassName="BloodTb1DataTable" msprop:Generator_TableVarName="tableBloodTb1" msprop:Generator_TablePropName="BloodTb1" msprop:Generator_RowDeletingName="BloodTb1RowDeleting" msprop:Generator_RowChangingName="BloodTb1RowChanging" msprop:Generator_RowEvHandlerName="BloodTb1RowChangeEventHandler" msprop:Generator_RowDeletedName="BloodTb1RowDeleted" msprop:Generator_UserTableName="BloodTb1" msprop:Generator_RowChangedName="BloodTb1RowChanged" msprop:Generator_RowEvArgName="BloodTb1RowChangeEvent" msprop:Generator_RowClassName="BloodTb1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BGroup" msprop:Generator_ColumnVarNameInTable="columnBGroup" msprop:Generator_ColumnPropNameInRow="BGroup" msprop:Generator_ColumnPropNameInTable="BGroupColumn" msprop:Generator_UserColumnName="BGroup">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BStock" msprop:Generator_ColumnVarNameInTable="columnBStock" msprop:Generator_ColumnPropNameInRow="BStock" msprop:Generator_ColumnPropNameInTable="BStockColumn" msprop:Generator_UserColumnName="BStock" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BloodTb1" />
      <xs:field xpath="mstns:BGroup" />
    </xs:unique>
  </xs:element>
</xs:schema>